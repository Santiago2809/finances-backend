generator client {
  provider = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model categories {
  id           BigInt         @id @default(autoincrement())
  name         String
  user_id      String
  users        users          @relation(fields: [user_id], references: [id], onDelete: Cascade)
  transactions transactions[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model transactions {
  id          Int         @id @default(autoincrement())
  name        String
  type        type
  created_at  DateTime    @default(now()) @db.Timestamptz(6)
  category_id BigInt?
  amount      Decimal     @db.Decimal
  user_id     String
  categories  categories? @relation(fields: [category_id], references: [id], map: "transactions_category_fkey")
  users       users       @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id                   String         @id(map: "usuarios_pkey")
  name                 String
  email                String         @unique(map: "usuarios_email_key")
  password             String
  phone                String?
  status               Boolean?       @default(true)
  created_at           DateTime       @default(now()) @db.Timestamptz(6)
  last_login           DateTime?      @db.Timestamp(6)
  password_reset_token String?
  categories           categories[]
  transactions         transactions[]
}

enum type {
  income
  expense
}
